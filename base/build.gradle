def extensions = rootProject.ext
def plugins = extensions.plugins
def androidConfigs = extensions.android
def depends = extensions.dependencies
def signing = extensions.secret.signingConfigs
def app = extensions.modules.base
apply plugin: plugins.library

android {
    compileSdkVersion androidConfigs.compileSdkVersion
    buildToolsVersion androidConfigs.buildToolsVersion

    defaultConfig {
        minSdkVersion androidConfigs.minSdkVersion
        targetSdkVersion androidConfigs.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName

    }



    compileOptions {
        sourceCompatibility androidConfigs.javaVersion
        targetCompatibility androidConfigs.javaVersion
    }



    signingConfigs {
        debug {
            storeFile file(signing.debugStoreFile)
            storePassword signing.debugStorePassword
            keyAlias signing.debugKeyAlias
            keyPassword signing.debugKeyPassword
        }
        release {
            storeFile file(signing.releaseStoreFile)
            storePassword signing.releaseStorePassword
            keyAlias signing.releaseKeyAlias
            keyPassword signing.releaseKeyPassword
        }
    }
    buildTypes {
        debug {

            minifyEnabled androidConfigs.debugMinifyEnabled
            shrinkResources androidConfigs.debugShrinkResources
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled androidConfigs.releaseMinifyEnabled
            shrinkResources androidConfigs.releaseShrinkResources
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

}

dependencies {

    // compat androidX lib
    api depends.appcompat
    // ui lib
    api depends.material
    api depends.constraintLayout
    api depends.swipereRefreshLayout

    api depends.zxing
    // glide
    api depends.glide
    annotationProcessor depends.glideCompiler

    api depends.rxJava
    api depends.rxAndroid
    api depends.retrofit
    api depends.retrofitGson
    api depends.retrofitRxjava

    //brva
    api depends.brva
    api depends.logging
    api depends.dialog
    api project(':thatMvp')

    // CameraX core library
    def camerax_version = '1.0.0-rc01'
    implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    // CameraX View class
    implementation 'androidx.camera:camera-view:1.0.0-alpha20'

}